@author: David García Garzón
@title: Wiki page generator test
@revision: $Revision$
@next: 
@prev: 

= Wiki generator tests =

== Paragraph test ==
This is a simple test for the web/article generator.
It takes wiki pages and produces HTML and LaTeX output.
It also takes a content folder with html fragments and
embeds them on a scheletton.
The idea is to have the benefits of a wiki syntax
but maintain the files on a SVN server and editing
them using your favorite editor (vim?) instead of
the web interface.

Paragraph are separated by an empty line.
Like the one before.

== Lists tests ==

# first
# second

# new first

# parent 1
## child 1
## child 2
### subchild 1
## child 3
# parent 2


Paragraph touching the itemization
* item
*# inner numerated
*#*#*# Complex subitemization
*#***# Should go back to the common one
Paragraph touching the itemization

== Inline substitutions ==

Normal ''emphasis'' Normal. ''Another emphasis'' Normal
Normal ''em'phasis'' Normal. ''Another emphasis'' Normal.
Normal '''bold''' Normal. '''Another bold''' Normal.
Normal '''bold ''emphasis'' more bold. don't ''' Normal. '''Another bold''' Normal.
Normal ''emphasis '''bold don't''' more emphasis'' Normal. '''Another bold''' Normal.

== Linking ==

[[link.html a local link]]
[[link.html local link without alias]]
[[link.html one]] and [[link.html other]] local link in the same line.

== Citations ==

Cites are resolved using BibTeX files found in the same directory.
In LaTeX it works as a regular cite in latex.
In HTML a tooltip apears with the bibliographic information.
This work can be found in @cite:lee87. And also in @cite:www-CLAM.

== Special paragraphs ==

{{{
Three curly braces bounds a text to be preformatted 
}}}

 Placing space or tabulators
 creates a cite.


Abstract:
Some special paragraphs can be defined by preceding them by a
colon ended keyword such as 'Abstract:'

Keywords:
And the Keywords: special paragraph

TODO: This is a pending task

Definition:
A wiki compiler is a program that takes a text file containing wiki like
syntax and outputs some publishing format.

Colollary:
WiKo is a wiki compiler.

Proof:
This is a proof

Lemma:
Simple is better


== Toc generation ==

=== Third level ===

==== Fourth level ====

Headers generate labels.
They can be refered from a Table of Content.
This is the place holder for a Table of Content

%(toc)s

The index header doesn't appear on the ToC.
The ToC in LaTeX output is ignored.

== Figures and formulas ==
Label: OtherLabel

Full featured figures can be generated by using the 'Figure:' special word
Figure: MyLabel wikologo.png Alt text
This is the caption text.
Til the next empty line.

Formulas can be inserted `x+1` inline.

You can use the Math environment to place non-inline formulas:
Math:
a\over{b-c}

Or use the Equation environment to get numbered equations:
Equation:
a\over{b-c}

`r_iO_i=r_jI_j`

Were `r_i` and `r_j` are the number of times that node i and node j will be fired during a period. The vector `\vec{r}` gives the number of repetitions for each node.





